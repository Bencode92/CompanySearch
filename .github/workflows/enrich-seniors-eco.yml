name: Enrich Senior Directors ECO

on:
  workflow_dispatch:
    inputs:
      cutoff_year:
        description: "Garder uniquement les dirigeants n√©s AVANT cette ann√©e"
        required: false
        default: "1962"
        type: string
      input_file:
        description: "CSV d'entr√©e (SIREN par ligne)"
        required: false
        default: "output/sirens_interim_75_92.csv"
        type: string
      output_file:
        description: "CSV de sortie"
        required: false
        default: "output/dirigeants_seniors_eco.csv"
        type: string

  # Tous les lundis √† 06:00 UTC
  schedule:
    - cron: "0 6 * * 1"

jobs:
  enrich-seniors-eco:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Check input CSV exists
        id: check_input
        run: |
          INPUT_FILE="${{ inputs.input_file || 'output/sirens_interim_75_92.csv' }}"
          
          if [ ! -f "$INPUT_FILE" ]; then
            echo "‚ùå Fichier introuvable: $INPUT_FILE"
            echo "üëâ Lancez d'abord le workflow 'Get SIREN List Paris-92'"
            exit 1
          fi
          
          COUNT=$(tail -n +2 "$INPUT_FILE" | wc -l)
          echo "‚úÖ Fichier trouv√© : $COUNT SIREN √† traiter"
          echo "siren_count=$COUNT" >> $GITHUB_OUTPUT

      - name: Enrichissement √âCONOMIQUE (0,1 cr√©dit/dirigeant)
        env:
          PAPPERS_API_KEY: ${{ secrets.PAPPERS_API_KEY }}
        run: |
          if [ -z "$PAPPERS_API_KEY" ]; then
            echo "‚ùå Secret PAPPERS_API_KEY manquant !"
            echo "üëâ Settings ‚Üí Secrets and variables ‚Üí Actions ‚Üí New repository secret"
            exit 1
          fi
          
          echo "üöÄ Lancement enrichissement √âCONOMIQUE"
          echo "üí∞ M√©thode : /recherche-dirigeants (0,1 cr√©dit par r√©sultat)"
          echo "üéØ Filtre : Dirigeants n√©s avant ${{ inputs.cutoff_year || '1962' }}"
          echo ""
          
          node scripts/enrich_seniors_eco.js \
            --cutoff-year="${{ inputs.cutoff_year || '1962' }}" \
            --in="${{ inputs.input_file || 'output/sirens_interim_75_92.csv' }}" \
            --out="${{ inputs.output_file || 'output/dirigeants_seniors_eco.csv' }}"

      - name: Analyser les r√©sultats
        id: analyze
        run: |
          OUTPUT_FILE="${{ inputs.output_file || 'output/dirigeants_seniors_eco.csv' }}"
          
          if [ -f "$OUTPUT_FILE" ]; then
            LINES=$(tail -n +2 "$OUTPUT_FILE" | wc -l)
            echo "dirigeants_count=$LINES" >> $GITHUB_OUTPUT
            
            # Calculer les √©conomies
            SIREN_COUNT=${{ steps.check_input.outputs.siren_count }}
            CREDITS_USED=$(echo "scale=1; $LINES * 0.1" | bc)
            CREDITS_SAVED=$(echo "scale=1; $SIREN_COUNT - $CREDITS_USED" | bc)
            MONEY_SAVED=$(echo "scale=2; $CREDITS_SAVED * 0.02" | bc)
            
            echo "credits_used=$CREDITS_USED" >> $GITHUB_OUTPUT
            echo "credits_saved=$CREDITS_SAVED" >> $GITHUB_OUTPUT
            echo "money_saved=$MONEY_SAVED" >> $GITHUB_OUTPUT
            
            echo ""
            echo "üìä R√âSULTATS"
            echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
            echo "‚úÖ $LINES dirigeants seniors trouv√©s"
            echo "üí∞ $CREDITS_USED cr√©dits utilis√©s (vs $SIREN_COUNT en m√©thode classique)"
            echo "üéâ $CREDITS_SAVED cr√©dits √©conomis√©s (~${MONEY_SAVED}‚Ç¨)"
            echo ""
            echo "üìÑ Aper√ßu des 10 premiers r√©sultats :"
            echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
            head -n 11 "$OUTPUT_FILE" | column -t -s ';'
          else
            echo "‚ö†Ô∏è Aucun fichier de r√©sultat g√©n√©r√©"
            echo "dirigeants_count=0" >> $GITHUB_OUTPUT
          fi

      - name: Upload r√©sultats
        if: steps.analyze.outputs.dirigeants_count != '0'
        uses: actions/upload-artifact@v4
        with:
          name: dirigeants-seniors-eco-${{ github.run_number }}
          path: ${{ inputs.output_file || 'output/dirigeants_seniors_eco.csv' }}
          retention-days: 90

      - name: Commit r√©sultats
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          OUTPUT_FILE="${{ inputs.output_file || 'output/dirigeants_seniors_eco.csv' }}"
          
          # Forcer l'ajout malgr√© le .gitignore
          git add -f "$OUTPUT_FILE" 2>/dev/null || true
          
          # Message de commit avec stats
          CUTOFF="${{ inputs.cutoff_year || '1962' }}"
          COUNT="${{ steps.analyze.outputs.dirigeants_count || '0' }}"
          CREDITS="${{ steps.analyze.outputs.credits_used || '0' }}"
          
          git commit -m "Enrichissement ECO - $COUNT dirigeants (n√©s<$CUTOFF) - ${CREDITS} cr√©dits" || echo "Pas de changements"
          git push || true

      - name: Cr√©er un r√©sum√© d√©taill√©
        run: |
          echo "# üí∞ Enrichissement √âCONOMIQUE - Dirigeants Seniors" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "## üéØ Param√®tres" >> $GITHUB_STEP_SUMMARY
          echo "- **M√©thode** : /recherche-dirigeants (0,1 cr√©dit/r√©sultat)" >> $GITHUB_STEP_SUMMARY
          echo "- **D√©partements** : Paris (75) et Hauts-de-Seine (92)" >> $GITHUB_STEP_SUMMARY
          echo "- **Secteur** : Int√©rim (NAF 78.20Z)" >> $GITHUB_STEP_SUMMARY
          echo "- **Filtre √¢ge** : N√©s avant ${{ inputs.cutoff_year || '1962' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Fichier source** : ${{ inputs.input_file || 'output/sirens_interim_75_92.csv' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.analyze.outputs.dirigeants_count }}" != "0" ]; then
            echo "## ‚úÖ R√©sultats" >> $GITHUB_STEP_SUMMARY
            echo "| M√©trique | Valeur |" >> $GITHUB_STEP_SUMMARY
            echo "|----------|--------|" >> $GITHUB_STEP_SUMMARY
            echo "| **Entreprises trait√©es** | ${{ steps.check_input.outputs.siren_count }} |" >> $GITHUB_STEP_SUMMARY
            echo "| **Dirigeants seniors trouv√©s** | ${{ steps.analyze.outputs.dirigeants_count }} |" >> $GITHUB_STEP_SUMMARY
            echo "| **Cr√©dits utilis√©s** | ${{ steps.analyze.outputs.credits_used }} |" >> $GITHUB_STEP_SUMMARY
            echo "| **Cr√©dits √©conomis√©s** | ${{ steps.analyze.outputs.credits_saved }} |" >> $GITHUB_STEP_SUMMARY
            echo "| **√âconomie r√©alis√©e** | ~${{ steps.analyze.outputs.money_saved }}‚Ç¨ |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            echo "## üìä Donn√©es collect√©es" >> $GITHUB_STEP_SUMMARY
            echo "- Nom de la soci√©t√© (gratuit via API gouv)" >> $GITHUB_STEP_SUMMARY
            echo "- SIREN et SIRET du si√®ge" >> $GITHUB_STEP_SUMMARY
            echo "- Nom, pr√©nom et fonction du dirigeant" >> $GITHUB_STEP_SUMMARY
            echo "- Date de naissance et √¢ge calcul√©" >> $GITHUB_STEP_SUMMARY
            echo "- Ville du si√®ge social" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            echo "## üí° Avantages de cette m√©thode" >> $GITHUB_STEP_SUMMARY
            echo "- ‚úÖ **10x moins cher** : 0,1 cr√©dit par dirigeant trouv√©" >> $GITHUB_STEP_SUMMARY
            echo "- ‚úÖ **Ciblage pr√©cis** : Filtre directement par √¢ge dans l'API" >> $GITHUB_STEP_SUMMARY
            echo "- ‚úÖ **Donn√©es gratuites** : Nom soci√©t√© via API gouvernementale" >> $GITHUB_STEP_SUMMARY
            echo "- ‚úÖ **Pas de gaspillage** : Paiement uniquement pour les r√©sultats pertinents" >> $GITHUB_STEP_SUMMARY
          else
            echo "## ‚ö†Ô∏è Aucun r√©sultat" >> $GITHUB_STEP_SUMMARY
            echo "V√©rifiez que le fichier source contient des SIREN valides." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*Fichier g√©n√©r√© : ${{ inputs.output_file || 'output/dirigeants_seniors_eco.csv' }}*" >> $GITHUB_STEP_SUMMARY