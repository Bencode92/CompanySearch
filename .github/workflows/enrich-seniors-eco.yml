name: Enrich Senior Directors ECO

on:
  workflow_dispatch:
    inputs:
      cutoff_year:
        description: "Garder uniquement les dirigeants n√©s AVANT cette ann√©e"
        required: false
        default: "1962"
        type: string
      input_file:
        description: "CSV d'entr√©e (SIREN par ligne)"
        required: false
        default: "output/sirens_interim_75_92.csv"
        type: string
      output_file:
        description: "CSV de sortie"
        required: false
        default: "output/dirigeants_seniors_eco.csv"
        type: string

  schedule:
    - cron: "0 6 * * 1"

jobs:
  enrich-seniors-eco:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies (strict with fallback)
        run: npm ci || npm i --no-audit --no-fund

      - name: Check input CSV exists
        id: check_input
        run: |
          INPUT_FILE="${{ inputs.input_file || 'output/sirens_interim_75_92.csv' }}"
          if [ ! -f "$INPUT_FILE" ]; then
            echo "‚ùå Fichier introuvable: $INPUT_FILE"
            echo "üëâ Lancez d'abord le workflow 'Get SIREN List Paris-92'"
            exit 1
          fi
          COUNT=$(tail -n +2 "$INPUT_FILE" | wc -l)
          echo "‚úÖ Fichier trouv√© : $COUNT SIREN √† traiter"
          echo "siren_count=$COUNT" >> $GITHUB_OUTPUT

      - name: Enrichissement √âCONOMIQUE (0,1 cr√©dit/dirigeant)
        env:
          PAPPERS_API_KEY: ${{ secrets.PAPPERS_API_KEY }}
        run: |
          if [ -z "$PAPPERS_API_KEY" ]; then
            echo "‚ùå Secret PAPPERS_API_KEY manquant !"
            exit 1
          fi
          node scripts/enrich_seniors_eco.js \
            --cutoff-year="${{ inputs.cutoff_year || '1962' }}" \
            --in="${{ inputs.input_file || 'output/sirens_interim_75_92.csv' }}" \
            --out="${{ inputs.output_file || 'output/dirigeants_seniors_eco.csv' }}"

      - name: Analyze results
        id: analyze
        run: |
          OUT="${{ inputs.output_file || 'output/dirigeants_seniors_eco.csv' }}"
          if [ -f "$OUT" ]; then
            LINES=$(tail -n +2 "$OUT" | wc -l)
            echo "dirigeants_count=$LINES" >> $GITHUB_OUTPUT
            SIREN_COUNT=${{ steps.check_input.outputs.siren_count }}
            CREDITS_USED=$(echo "scale=1; $LINES * 0.1" | bc)
            CREDITS_SAVED=$(echo "scale=1; $SIREN_COUNT - $CREDITS_USED" | bc)
            MONEY_SAVED=$(echo "scale=2; $CREDITS_SAVED * 0.02" | bc)
            echo "credits_used=$CREDITS_USED" >> $GITHUB_OUTPUT
            echo "credits_saved=$CREDITS_SAVED" >> $GITHUB_OUTPUT
            echo "money_saved=$MONEY_SAVED" >> $GITHUB_OUTPUT
            head -n 11 "$OUT" | column -t -s ';' || true
          else
            echo "dirigeants_count=0" >> $GITHUB_OUTPUT
          fi

      - name: Upload results
        if: steps.analyze.outputs.dirigeants_count != '0'
        uses: actions/upload-artifact@v4
        with:
          name: dirigeants-seniors-eco-${{ github.run_number }}
          path: ${{ inputs.output_file || 'output/dirigeants_seniors_eco.csv' }}
          retention-days: 90

      - name: Commit results
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          OUT="${{ inputs.output_file || 'output/dirigeants_seniors_eco.csv' }}"
          git add -f "$OUT" 2>/dev/null || true
          COUNT="${{ steps.analyze.outputs.dirigeants_count || '0' }}"
          CUTOFF="${{ inputs.cutoff_year || '1962' }}"
          CREDITS="${{ steps.analyze.outputs.credits_used || '0' }}"
          git commit -m "ECO: $COUNT dirigeants (n√©s<$CUTOFF) - ${CREDITS} cr√©dits" || echo "Pas de changements"
          git push || true

      - name: Summary
        run: |
          echo "# üí∞ Enrichissement √âCO - Dirigeants seniors" >> $GITHUB_STEP_SUMMARY
          echo "- Entreprises trait√©es: ${{ steps.check_input.outputs.siren_count }}" >> $GITHUB_STEP_SUMMARY
          echo "- Dirigeants trouv√©s: ${{ steps.analyze.outputs.dirigeants_count }}" >> $GITHUB_STEP_SUMMARY
          echo "- Cr√©dits utilis√©s (‚âà): ${{ steps.analyze.outputs.credits_used }}" >> $GITHUB_STEP_SUMMARY
          echo "- √âconomie (‚âà): ~${{ steps.analyze.outputs.money_saved }}‚Ç¨" >> $GITHUB_STEP_SUMMARY